{"version":3,"sources":["components/Clima.js","components/Error.js","components/Formulario.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Clima","resultado","name","main","kelvin","className","parseFloat","temp","toFixed","temp_max","temp_min","Error","mensaje","Formulario","busqueda","setBusqueda","setConsultar","useState","error","setError","ciudad","pais","handleChange","e","target","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Header","titulo","href","App","componente","consultar","setResultado","useEffect","a","url","fetch","respuesta","json","cod","consultarAPI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6ed73c1.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Clima = ({ resultado }) => {\n  // Extraer los vcalores\n  const { name, main } = resultado\n\n  // Grados Kelvin\n  const kelvin = 273.15\n\n  if (!name) return null\n  return (\n    <>\n      <div className=\"card-panel white col s12\">\n        <div className=\"black-text\">\n          <h2>El clima de {name} es:</h2>\n          <p className=\"temperatura\">\n            {parseFloat(main.temp - kelvin, 10).toFixed(2)}{' '}\n            <span>&#x2103;</span>\n          </p>\n          <p>\n            Temp. Máxima: {parseFloat(main.temp_max - kelvin, 10).toFixed(2)}{' '}\n            <span>&#x2103;</span>\n          </p>\n          <p>\n            Temp. Mínima: {parseFloat(main.temp_min - kelvin, 10).toFixed(2)}{' '}\n            <span>&#x2103;</span>\n          </p>\n        </div>\n      </div>\n    </>\n  )\n}\n\nClima.propTypes = {\n  resultado: PropTypes.object.isRequired,\n}\n\nexport default Clima\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Error = ({ mensaje }) => {\n  return (\n    <>\n      <p className=\"red darken-4 error\">{mensaje}</p>\n    </>\n  )\n}\n\nError.propTypes = {\n  mensaje: PropTypes.string.isRequired,\n}\n\nexport default Error\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Error from './Error'\n\nconst Formulario = ({ busqueda, setBusqueda, setConsultar }) => {\n  const [error, setError] = useState(false)\n\n  // Extraer los datos del state\n  const { ciudad, pais } = busqueda\n\n  // Funcion que coloca los elementos en el state\n  const handleChange = (e) => {\n    // actualizar el state\n    setBusqueda({ ...busqueda, [e.target.name]: e.target.value })\n  }\n\n  // función submit del form\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    // validar\n    if (ciudad.trim() === '' || pais.trim() === '') {\n      setError(true)\n    } else {\n      setError(false)\n      setConsultar(true)\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        {error ? <Error mensaje=\"Todos los campos son obligatorios\" /> : null}\n        <div className=\"input-field col s12\">\n          <input\n            type=\"text\"\n            name=\"ciudad\"\n            id=\"ciudad\"\n            value={ciudad}\n            onChange={handleChange}\n          />\n          <label htmlFor=\"ciudad\">Ciudad:</label>\n        </div>\n        <div className=\"input-field col s12\">\n          <select name=\"pais\" id=\"pais\" value={pais} onChange={handleChange}>\n            <option value=\"\">-- Seleccione un país --</option>\n            <option value=\"PE\">Perú</option>\n            <option value=\"US\">Estados Unidos</option>\n            <option value=\"MX\">México</option>\n            <option value=\"AR\">Argentina</option>\n            <option value=\"CO\">Colombia</option>\n            <option value=\"CR\">Costa Rica</option>\n            <option value=\"ES\">España</option>\n          </select>\n          <label htmlFor=\"pais\">País:</label>\n        </div>\n        <div className=\"input-field col s12\">\n          <button\n            type=\"submit\"\n            className=\"waves-effect waves-light btn-large btn-block orange accent-8 col s12\"\n          >\n            Buscar Clima\n          </button>\n        </div>\n      </form>\n    </>\n  )\n}\n\nFormulario.propTypes = {\n  busqueda: PropTypes.object.isRequired,\n  setBusqueda: PropTypes.func.isRequired,\n  setConsultar: PropTypes.func.isRequired,\n}\n\nexport default Formulario\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Header = ({ titulo }) => {\n  return (\n    <>\n      <nav>\n        <div className=\"nav-wrapper light-blue darken-2\">\n          <a href=\"#!\" className=\"brand-logo\">\n            {titulo}\n          </a>\n        </div>\n      </nav>\n    </>\n  )\n}\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { useEffect, useState } from 'react'\nimport Clima from './components/Clima'\nimport Error from './components/Error'\nimport Formulario from './components/Formulario'\nimport Header from './components/Header'\n\nfunction App() {\n  // State del formulacio\n  const [busqueda, setBusqueda] = useState({\n    ciudad: '',\n    pais: '',\n  })\n\n  const [consultar, setConsultar] = useState(false)\n\n  const [error, setError] = useState(false)\n\n  // Extraer datos\n  const { ciudad, pais } = busqueda\n\n  // Pasar valores de la API al state\n  const [resultado, setResultado] = useState({})\n\n  // crear el useEffect\n  useEffect(() => {\n    // consultar la API\n    const consultarAPI = async () => {\n      // http://api.openweathermap.org/data/2.5/weather?q=pisco,peru&appid=adb1d16777c24e5abe22a38ee9363518  --> De esta forma se llama a la API\n\n      if (consultar) {\n        // API Key\n        const appID = 'adb1d16777c24e5abe22a38ee9363518'\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appID}`\n\n        const respuesta = await fetch(url)\n        const resultado = await respuesta.json()\n\n        setResultado(resultado)\n        setConsultar(false)\n\n        // Detecta si hubo resutados correctos en la consulta\n        if (resultado.cod === '404') {\n          setError(true)\n        } else {\n          setError(false)\n        }\n      }\n    }\n\n    consultarAPI()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [consultar])\n\n  let componente\n  if (error) {\n    componente = <Error mensaje=\"No hay resultados\" />\n  } else {\n    componente = <Clima resultado={resultado} />\n  }\n\n  return (\n    <>\n      <Header titulo=\"Clima React App\" />\n      <div className=\"contenedor-form\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col m6 s12\">\n              <Formulario\n                busqueda={busqueda}\n                setBusqueda={setBusqueda}\n                setConsultar={setConsultar}\n              />\n            </div>\n            <div className=\"col m6 s12\">{componente}</div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}